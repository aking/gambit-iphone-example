;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; AUTO-GENERATED by 'gambit_ffi_import.clj'
;;;
;;; Imported from: http://www.khronos.org/registry/gles/api/2.0/gl2.h
;;; Import Date: Fri Feb 12 14:27:11 EST 2010
;;;


(declare (block)
         (standard-bindings)
         (extended-bindings))

(c-declare "#include <stdlib.h>")
(c-declare "#include <OpenGLES/ES2/gl.h>")


(define GL_ES_VERSION_2_0                          1)   ; 0x1
(define GL_DEPTH_BUFFER_BIT                      256)   ; 0x100
(define GL_STENCIL_BUFFER_BIT                   1024)   ; 0x400
(define GL_COLOR_BUFFER_BIT                    16384)   ; 0x4000
(define GL_FALSE                                   0)   ; 0x0
(define GL_TRUE                                    1)   ; 0x1
(define GL_POINTS                                  0)   ; 0x0
(define GL_LINES                                   1)   ; 0x1
(define GL_LINE_LOOP                               2)   ; 0x2
(define GL_LINE_STRIP                              3)   ; 0x3
(define GL_TRIANGLES                               4)   ; 0x4
(define GL_TRIANGLE_STRIP                          5)   ; 0x5
(define GL_TRIANGLE_FAN                            6)   ; 0x6
(define GL_ZERO                                    0)   ; 0x0
(define GL_ONE                                     1)   ; 0x1
(define GL_SRC_COLOR                             768)   ; 0x300
(define GL_ONE_MINUS_SRC_COLOR                   769)   ; 0x301
(define GL_SRC_ALPHA                             770)   ; 0x302
(define GL_ONE_MINUS_SRC_ALPHA                   771)   ; 0x303
(define GL_DST_ALPHA                             772)   ; 0x304
(define GL_ONE_MINUS_DST_ALPHA                   773)   ; 0x305
(define GL_DST_COLOR                             774)   ; 0x306
(define GL_ONE_MINUS_DST_COLOR                   775)   ; 0x307
(define GL_SRC_ALPHA_SATURATE                    776)   ; 0x308
(define GL_FUNC_ADD                            32774)   ; 0x8006
(define GL_BLEND_EQUATION                      32777)   ; 0x8009
(define GL_BLEND_EQUATION_RGB                  32777)   ; 0x8009
(define GL_BLEND_EQUATION_ALPHA                34877)   ; 0x883d
(define GL_FUNC_SUBTRACT                       32778)   ; 0x800a
(define GL_FUNC_REVERSE_SUBTRACT               32779)   ; 0x800b
(define GL_BLEND_DST_RGB                       32968)   ; 0x80c8
(define GL_BLEND_SRC_RGB                       32969)   ; 0x80c9
(define GL_BLEND_DST_ALPHA                     32970)   ; 0x80ca
(define GL_BLEND_SRC_ALPHA                     32971)   ; 0x80cb
(define GL_CONSTANT_COLOR                      32769)   ; 0x8001
(define GL_ONE_MINUS_CONSTANT_COLOR            32770)   ; 0x8002
(define GL_CONSTANT_ALPHA                      32771)   ; 0x8003
(define GL_ONE_MINUS_CONSTANT_ALPHA            32772)   ; 0x8004
(define GL_BLEND_COLOR                         32773)   ; 0x8005
(define GL_ARRAY_BUFFER                        34962)   ; 0x8892
(define GL_ELEMENT_ARRAY_BUFFER                34963)   ; 0x8893
(define GL_ARRAY_BUFFER_BINDING                34964)   ; 0x8894
(define GL_ELEMENT_ARRAY_BUFFER_BINDING        34965)   ; 0x8895
(define GL_STREAM_DRAW                         35040)   ; 0x88e0
(define GL_STATIC_DRAW                         35044)   ; 0x88e4
(define GL_DYNAMIC_DRAW                        35048)   ; 0x88e8
(define GL_BUFFER_SIZE                         34660)   ; 0x8764
(define GL_BUFFER_USAGE                        34661)   ; 0x8765
(define GL_CURRENT_VERTEX_ATTRIB               34342)   ; 0x8626
(define GL_FRONT                                1028)   ; 0x404
(define GL_BACK                                 1029)   ; 0x405
(define GL_FRONT_AND_BACK                       1032)   ; 0x408
(define GL_TEXTURE_2D                           3553)   ; 0xde1
(define GL_CULL_FACE                            2884)   ; 0xb44
(define GL_BLEND                                3042)   ; 0xbe2
(define GL_DITHER                               3024)   ; 0xbd0
(define GL_STENCIL_TEST                         2960)   ; 0xb90
(define GL_DEPTH_TEST                           2929)   ; 0xb71
(define GL_SCISSOR_TEST                         3089)   ; 0xc11
(define GL_POLYGON_OFFSET_FILL                 32823)   ; 0x8037
(define GL_SAMPLE_ALPHA_TO_COVERAGE            32926)   ; 0x809e
(define GL_SAMPLE_COVERAGE                     32928)   ; 0x80a0
(define GL_NO_ERROR                                0)   ; 0x0
(define GL_INVALID_ENUM                         1280)   ; 0x500
(define GL_INVALID_VALUE                        1281)   ; 0x501
(define GL_INVALID_OPERATION                    1282)   ; 0x502
(define GL_OUT_OF_MEMORY                        1285)   ; 0x505
(define GL_CW                                   2304)   ; 0x900
(define GL_CCW                                  2305)   ; 0x901
(define GL_LINE_WIDTH                           2849)   ; 0xb21
(define GL_ALIASED_POINT_SIZE_RANGE            33901)   ; 0x846d
(define GL_ALIASED_LINE_WIDTH_RANGE            33902)   ; 0x846e
(define GL_CULL_FACE_MODE                       2885)   ; 0xb45
(define GL_FRONT_FACE                           2886)   ; 0xb46
(define GL_DEPTH_RANGE                          2928)   ; 0xb70
(define GL_DEPTH_WRITEMASK                      2930)   ; 0xb72
(define GL_DEPTH_CLEAR_VALUE                    2931)   ; 0xb73
(define GL_DEPTH_FUNC                           2932)   ; 0xb74
(define GL_STENCIL_CLEAR_VALUE                  2961)   ; 0xb91
(define GL_STENCIL_FUNC                         2962)   ; 0xb92
(define GL_STENCIL_FAIL                         2964)   ; 0xb94
(define GL_STENCIL_PASS_DEPTH_FAIL              2965)   ; 0xb95
(define GL_STENCIL_PASS_DEPTH_PASS              2966)   ; 0xb96
(define GL_STENCIL_REF                          2967)   ; 0xb97
(define GL_STENCIL_VALUE_MASK                   2963)   ; 0xb93
(define GL_STENCIL_WRITEMASK                    2968)   ; 0xb98
(define GL_STENCIL_BACK_FUNC                   34816)   ; 0x8800
(define GL_STENCIL_BACK_FAIL                   34817)   ; 0x8801
(define GL_STENCIL_BACK_PASS_DEPTH_FAIL        34818)   ; 0x8802
(define GL_STENCIL_BACK_PASS_DEPTH_PASS        34819)   ; 0x8803
(define GL_STENCIL_BACK_REF                    36003)   ; 0x8ca3
(define GL_STENCIL_BACK_VALUE_MASK             36004)   ; 0x8ca4
(define GL_STENCIL_BACK_WRITEMASK              36005)   ; 0x8ca5
(define GL_VIEWPORT                             2978)   ; 0xba2
(define GL_SCISSOR_BOX                          3088)   ; 0xc10
(define GL_COLOR_CLEAR_VALUE                    3106)   ; 0xc22
(define GL_COLOR_WRITEMASK                      3107)   ; 0xc23
(define GL_UNPACK_ALIGNMENT                     3317)   ; 0xcf5
(define GL_PACK_ALIGNMENT                       3333)   ; 0xd05
(define GL_MAX_TEXTURE_SIZE                     3379)   ; 0xd33
(define GL_MAX_VIEWPORT_DIMS                    3386)   ; 0xd3a
(define GL_SUBPIXEL_BITS                        3408)   ; 0xd50
(define GL_RED_BITS                             3410)   ; 0xd52
(define GL_GREEN_BITS                           3411)   ; 0xd53
(define GL_BLUE_BITS                            3412)   ; 0xd54
(define GL_ALPHA_BITS                           3413)   ; 0xd55
(define GL_DEPTH_BITS                           3414)   ; 0xd56
(define GL_STENCIL_BITS                         3415)   ; 0xd57
(define GL_POLYGON_OFFSET_UNITS                10752)   ; 0x2a00
(define GL_POLYGON_OFFSET_FACTOR               32824)   ; 0x8038
(define GL_TEXTURE_BINDING_2D                  32873)   ; 0x8069
(define GL_SAMPLE_BUFFERS                      32936)   ; 0x80a8
(define GL_SAMPLES                             32937)   ; 0x80a9
(define GL_SAMPLE_COVERAGE_VALUE               32938)   ; 0x80aa
(define GL_SAMPLE_COVERAGE_INVERT              32939)   ; 0x80ab
(define GL_NUM_COMPRESSED_TEXTURE_FORMATS      34466)   ; 0x86a2
(define GL_COMPRESSED_TEXTURE_FORMATS          34467)   ; 0x86a3
(define GL_DONT_CARE                            4352)   ; 0x1100
(define GL_FASTEST                              4353)   ; 0x1101
(define GL_NICEST                               4354)   ; 0x1102
(define GL_GENERATE_MIPMAP_HINT                33170)   ; 0x8192
(define GL_BYTE                                 5120)   ; 0x1400
(define GL_UNSIGNED_BYTE                        5121)   ; 0x1401
(define GL_SHORT                                5122)   ; 0x1402
(define GL_UNSIGNED_SHORT                       5123)   ; 0x1403
(define GL_INT                                  5124)   ; 0x1404
(define GL_UNSIGNED_INT                         5125)   ; 0x1405
(define GL_FLOAT                                5126)   ; 0x1406
(define GL_FIXED                                5132)   ; 0x140c
(define GL_DEPTH_COMPONENT                      6402)   ; 0x1902
(define GL_ALPHA                                6406)   ; 0x1906
(define GL_RGB                                  6407)   ; 0x1907
(define GL_RGBA                                 6408)   ; 0x1908
(define GL_LUMINANCE                            6409)   ; 0x1909
(define GL_LUMINANCE_ALPHA                      6410)   ; 0x190a
(define GL_UNSIGNED_SHORT_4_4_4_4              32819)   ; 0x8033
(define GL_UNSIGNED_SHORT_5_5_5_1              32820)   ; 0x8034
(define GL_UNSIGNED_SHORT_5_6_5                33635)   ; 0x8363
(define GL_FRAGMENT_SHADER                     35632)   ; 0x8b30
(define GL_VERTEX_SHADER                       35633)   ; 0x8b31
(define GL_MAX_VERTEX_ATTRIBS                  34921)   ; 0x8869
(define GL_MAX_VERTEX_UNIFORM_VECTORS          36347)   ; 0x8dfb
(define GL_MAX_VARYING_VECTORS                 36348)   ; 0x8dfc
(define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS    35661)   ; 0x8b4d
(define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS      35660)   ; 0x8b4c
(define GL_MAX_TEXTURE_IMAGE_UNITS             34930)   ; 0x8872
(define GL_MAX_FRAGMENT_UNIFORM_VECTORS        36349)   ; 0x8dfd
(define GL_SHADER_TYPE                         35663)   ; 0x8b4f
(define GL_DELETE_STATUS                       35712)   ; 0x8b80
(define GL_LINK_STATUS                         35714)   ; 0x8b82
(define GL_VALIDATE_STATUS                     35715)   ; 0x8b83
(define GL_ATTACHED_SHADERS                    35717)   ; 0x8b85
(define GL_ACTIVE_UNIFORMS                     35718)   ; 0x8b86
(define GL_ACTIVE_UNIFORM_MAX_LENGTH           35719)   ; 0x8b87
(define GL_ACTIVE_ATTRIBUTES                   35721)   ; 0x8b89
(define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH         35722)   ; 0x8b8a
(define GL_SHADING_LANGUAGE_VERSION            35724)   ; 0x8b8c
(define GL_CURRENT_PROGRAM                     35725)   ; 0x8b8d
(define GL_NEVER                                 512)   ; 0x200
(define GL_LESS                                  513)   ; 0x201
(define GL_EQUAL                                 514)   ; 0x202
(define GL_LEQUAL                                515)   ; 0x203
(define GL_GREATER                               516)   ; 0x204
(define GL_NOTEQUAL                              517)   ; 0x205
(define GL_GEQUAL                                518)   ; 0x206
(define GL_ALWAYS                                519)   ; 0x207
(define GL_KEEP                                 7680)   ; 0x1e00
(define GL_REPLACE                              7681)   ; 0x1e01
(define GL_INCR                                 7682)   ; 0x1e02
(define GL_DECR                                 7683)   ; 0x1e03
(define GL_INVERT                               5386)   ; 0x150a
(define GL_INCR_WRAP                           34055)   ; 0x8507
(define GL_DECR_WRAP                           34056)   ; 0x8508
(define GL_VENDOR                               7936)   ; 0x1f00
(define GL_RENDERER                             7937)   ; 0x1f01
(define GL_VERSION                              7938)   ; 0x1f02
(define GL_EXTENSIONS                           7939)   ; 0x1f03
(define GL_NEAREST                              9728)   ; 0x2600
(define GL_LINEAR                               9729)   ; 0x2601
(define GL_NEAREST_MIPMAP_NEAREST               9984)   ; 0x2700
(define GL_LINEAR_MIPMAP_NEAREST                9985)   ; 0x2701
(define GL_NEAREST_MIPMAP_LINEAR                9986)   ; 0x2702
(define GL_LINEAR_MIPMAP_LINEAR                 9987)   ; 0x2703
(define GL_TEXTURE_MAG_FILTER                  10240)   ; 0x2800
(define GL_TEXTURE_MIN_FILTER                  10241)   ; 0x2801
(define GL_TEXTURE_WRAP_S                      10242)   ; 0x2802
(define GL_TEXTURE_WRAP_T                      10243)   ; 0x2803
(define GL_TEXTURE                              5890)   ; 0x1702
(define GL_TEXTURE_CUBE_MAP                    34067)   ; 0x8513
(define GL_TEXTURE_BINDING_CUBE_MAP            34068)   ; 0x8514
(define GL_TEXTURE_CUBE_MAP_POSITIVE_X         34069)   ; 0x8515
(define GL_TEXTURE_CUBE_MAP_NEGATIVE_X         34070)   ; 0x8516
(define GL_TEXTURE_CUBE_MAP_POSITIVE_Y         34071)   ; 0x8517
(define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y         34072)   ; 0x8518
(define GL_TEXTURE_CUBE_MAP_POSITIVE_Z         34073)   ; 0x8519
(define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z         34074)   ; 0x851a
(define GL_MAX_CUBE_MAP_TEXTURE_SIZE           34076)   ; 0x851c
(define GL_TEXTURE0                            33984)   ; 0x84c0
(define GL_TEXTURE1                            33985)   ; 0x84c1
(define GL_TEXTURE2                            33986)   ; 0x84c2
(define GL_TEXTURE3                            33987)   ; 0x84c3
(define GL_TEXTURE4                            33988)   ; 0x84c4
(define GL_TEXTURE5                            33989)   ; 0x84c5
(define GL_TEXTURE6                            33990)   ; 0x84c6
(define GL_TEXTURE7                            33991)   ; 0x84c7
(define GL_TEXTURE8                            33992)   ; 0x84c8
(define GL_TEXTURE9                            33993)   ; 0x84c9
(define GL_TEXTURE10                           33994)   ; 0x84ca
(define GL_TEXTURE11                           33995)   ; 0x84cb
(define GL_TEXTURE12                           33996)   ; 0x84cc
(define GL_TEXTURE13                           33997)   ; 0x84cd
(define GL_TEXTURE14                           33998)   ; 0x84ce
(define GL_TEXTURE15                           33999)   ; 0x84cf
(define GL_TEXTURE16                           34000)   ; 0x84d0
(define GL_TEXTURE17                           34001)   ; 0x84d1
(define GL_TEXTURE18                           34002)   ; 0x84d2
(define GL_TEXTURE19                           34003)   ; 0x84d3
(define GL_TEXTURE20                           34004)   ; 0x84d4
(define GL_TEXTURE21                           34005)   ; 0x84d5
(define GL_TEXTURE22                           34006)   ; 0x84d6
(define GL_TEXTURE23                           34007)   ; 0x84d7
(define GL_TEXTURE24                           34008)   ; 0x84d8
(define GL_TEXTURE25                           34009)   ; 0x84d9
(define GL_TEXTURE26                           34010)   ; 0x84da
(define GL_TEXTURE27                           34011)   ; 0x84db
(define GL_TEXTURE28                           34012)   ; 0x84dc
(define GL_TEXTURE29                           34013)   ; 0x84dd
(define GL_TEXTURE30                           34014)   ; 0x84de
(define GL_TEXTURE31                           34015)   ; 0x84df
(define GL_ACTIVE_TEXTURE                      34016)   ; 0x84e0
(define GL_REPEAT                              10497)   ; 0x2901
(define GL_CLAMP_TO_EDGE                       33071)   ; 0x812f
(define GL_MIRRORED_REPEAT                     33648)   ; 0x8370
(define GL_FLOAT_VEC2                          35664)   ; 0x8b50
(define GL_FLOAT_VEC3                          35665)   ; 0x8b51
(define GL_FLOAT_VEC4                          35666)   ; 0x8b52
(define GL_INT_VEC2                            35667)   ; 0x8b53
(define GL_INT_VEC3                            35668)   ; 0x8b54
(define GL_INT_VEC4                            35669)   ; 0x8b55
(define GL_BOOL                                35670)   ; 0x8b56
(define GL_BOOL_VEC2                           35671)   ; 0x8b57
(define GL_BOOL_VEC3                           35672)   ; 0x8b58
(define GL_BOOL_VEC4                           35673)   ; 0x8b59
(define GL_FLOAT_MAT2                          35674)   ; 0x8b5a
(define GL_FLOAT_MAT3                          35675)   ; 0x8b5b
(define GL_FLOAT_MAT4                          35676)   ; 0x8b5c
(define GL_SAMPLER_2D                          35678)   ; 0x8b5e
(define GL_SAMPLER_CUBE                        35680)   ; 0x8b60
(define GL_VERTEX_ATTRIB_ARRAY_ENABLED         34338)   ; 0x8622
(define GL_VERTEX_ATTRIB_ARRAY_SIZE            34339)   ; 0x8623
(define GL_VERTEX_ATTRIB_ARRAY_STRIDE          34340)   ; 0x8624
(define GL_VERTEX_ATTRIB_ARRAY_TYPE            34341)   ; 0x8625
(define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED      34922)   ; 0x886a
(define GL_VERTEX_ATTRIB_ARRAY_POINTER         34373)   ; 0x8645
(define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING  34975)   ; 0x889f
(define GL_IMPLEMENTATION_COLOR_READ_TYPE      35738)   ; 0x8b9a
(define GL_IMPLEMENTATION_COLOR_READ_FORMAT    35739)   ; 0x8b9b
(define GL_COMPILE_STATUS                      35713)   ; 0x8b81
(define GL_INFO_LOG_LENGTH                     35716)   ; 0x8b84
(define GL_SHADER_SOURCE_LENGTH                35720)   ; 0x8b88
(define GL_SHADER_COMPILER                     36346)   ; 0x8dfa
(define GL_SHADER_BINARY_FORMATS               36344)   ; 0x8df8
(define GL_NUM_SHADER_BINARY_FORMATS           36345)   ; 0x8df9
(define GL_LOW_FLOAT                           36336)   ; 0x8df0
(define GL_MEDIUM_FLOAT                        36337)   ; 0x8df1
(define GL_HIGH_FLOAT                          36338)   ; 0x8df2
(define GL_LOW_INT                             36339)   ; 0x8df3
(define GL_MEDIUM_INT                          36340)   ; 0x8df4
(define GL_HIGH_INT                            36341)   ; 0x8df5
(define GL_FRAMEBUFFER                         36160)   ; 0x8d40
(define GL_RENDERBUFFER                        36161)   ; 0x8d41
(define GL_RGBA4                               32854)   ; 0x8056
(define GL_RGB5_A1                             32855)   ; 0x8057
(define GL_RGB565                              36194)   ; 0x8d62
(define GL_DEPTH_COMPONENT16                   33189)   ; 0x81a5
(define GL_STENCIL_INDEX                        6401)   ; 0x1901
(define GL_STENCIL_INDEX8                      36168)   ; 0x8d48
(define GL_RENDERBUFFER_WIDTH                  36162)   ; 0x8d42
(define GL_RENDERBUFFER_HEIGHT                 36163)   ; 0x8d43
(define GL_RENDERBUFFER_INTERNAL_FORMAT        36164)   ; 0x8d44
(define GL_RENDERBUFFER_RED_SIZE               36176)   ; 0x8d50
(define GL_RENDERBUFFER_GREEN_SIZE             36177)   ; 0x8d51
(define GL_RENDERBUFFER_BLUE_SIZE              36178)   ; 0x8d52
(define GL_RENDERBUFFER_ALPHA_SIZE             36179)   ; 0x8d53
(define GL_RENDERBUFFER_DEPTH_SIZE             36180)   ; 0x8d54
(define GL_RENDERBUFFER_STENCIL_SIZE           36181)   ; 0x8d55
(define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE  36048)   ; 0x8cd0
(define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME  36049)   ; 0x8cd1
(define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL  36050)   ; 0x8cd2
(define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE  36051)   ; 0x8cd3
(define GL_COLOR_ATTACHMENT0                   36064)   ; 0x8ce0
(define GL_DEPTH_ATTACHMENT                    36096)   ; 0x8d00
(define GL_STENCIL_ATTACHMENT                  36128)   ; 0x8d20
(define GL_NONE                                    0)   ; 0x0
(define GL_FRAMEBUFFER_COMPLETE                36053)   ; 0x8cd5
(define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT   36054)   ; 0x8cd6
(define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT  36055)   ; 0x8cd7
(define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS   36057)   ; 0x8cd9
(define GL_FRAMEBUFFER_UNSUPPORTED             36061)   ; 0x8cdd
(define GL_FRAMEBUFFER_BINDING                 36006)   ; 0x8ca6
(define GL_RENDERBUFFER_BINDING                36007)   ; 0x8ca7
(define GL_MAX_RENDERBUFFER_SIZE               34024)   ; 0x84e8
(define GL_INVALID_FRAMEBUFFER_OPERATION        1286)   ; 0x506
(define glActiveTexture                (c-lambda (GLenum) void "glActiveTexture"))
(define glAttachShader                 (c-lambda (GLuint GLuint) void "glAttachShader"))
(define glBindAttribLocation           (c-lambda (GLuint GLuint char-string) void "glBindAttribLocation"))
(define glBindBuffer                   (c-lambda (GLenum GLuint) void "glBindBuffer"))
(define glBindFramebuffer              (c-lambda (GLenum GLuint) void "glBindFramebuffer"))
(define glBindRenderbuffer             (c-lambda (GLenum GLuint) void "glBindRenderbuffer"))
(define glBindTexture                  (c-lambda (GLenum GLuint) void "glBindTexture"))
(define glBlendColor                   (c-lambda (GLclampf GLclampf GLclampf GLclampf) void "glBlendColor"))
(define glBlendEquation                (c-lambda (GLenum) void "glBlendEquation"))
(define glBlendEquationSeparate        (c-lambda (GLenum GLenum) void "glBlendEquationSeparate"))
(define glBlendFunc                    (c-lambda (GLenum GLenum) void "glBlendFunc"))
(define glBlendFuncSeparate            (c-lambda (GLenum GLenum GLenum GLenum) void "glBlendFuncSeparate"))
(define glBufferData                   (c-lambda (GLenum (pointer int) (pointer void) GLenum) void "glBufferData"))
(define glBufferSubData                (c-lambda (GLenum (pointer int) (pointer int) (pointer void #f)) void "glBufferSubData"))
(define glCheckFramebufferStatus       (c-lambda (GLenum) GLenum "glCheckFramebufferStatus"))
(define glClear                        (c-lambda (GLbitfield) void "glClear"))
(define glClearColor                   (c-lambda (GLclampf GLclampf GLclampf GLclampf) void "glClearColor"))
(define glClearDepthf                  (c-lambda (GLclampf) void "glClearDepthf"))
(define glClearStencil                 (c-lambda (GLint) void "glClearStencil"))
(define glColorMask                    (c-lambda (GLboolean GLboolean GLboolean GLboolean) void "glColorMask"))
(define glCompileShader                (c-lambda (GLuint) void "glCompileShader"))
(define glCompressedTexImage2D         (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLint GLsizei (pointer void #f)) void "glCompressedTexImage2D"))
(define glCompressedTexSubImage2D      (c-lambda (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei (pointer void #f)) void "glCompressedTexSubImage2D"))
(define glCopyTexImage2D               (c-lambda (GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint) void "glCopyTexImage2D"))
(define glCopyTexSubImage2D            (c-lambda (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei) void "glCopyTexSubImage2D"))
(define glCreateProgram                (c-lambda () GLuint "glCreateProgram"))
(define glCreateShader                 (c-lambda (GLenum) GLuint "glCreateShader"))
(define glCullFace                     (c-lambda (GLenum) void "glCullFace"))
(define glDeleteBuffers                (c-lambda (GLsizei (pointer GLuint)) void "glDeleteBuffers"))
(define glDeleteFramebuffers           (c-lambda (GLsizei (pointer GLuint)) void "glDeleteFramebuffers"))
(define glDeleteProgram                (c-lambda (GLuint) void "glDeleteProgram"))
(define glDeleteRenderbuffers          (c-lambda (GLsizei (pointer GLuint)) void "glDeleteRenderbuffers"))
(define glDeleteShader                 (c-lambda (GLuint) void "glDeleteShader"))
(define glDeleteTextures               (c-lambda (GLsizei (pointer GLuint)) void "glDeleteTextures"))
(define glDepthFunc                    (c-lambda (GLenum) void "glDepthFunc"))
(define glDepthMask                    (c-lambda (GLboolean) void "glDepthMask"))
(define glDepthRangef                  (c-lambda (GLclampf GLclampf) void "glDepthRangef"))
(define glDetachShader                 (c-lambda (GLuint GLuint) void "glDetachShader"))
(define glDisable                      (c-lambda (GLenum) void "glDisable"))
(define glDisableVertexAttribArray     (c-lambda (GLuint) void "glDisableVertexAttribArray"))
(define glDrawArrays                   (c-lambda (GLenum GLint GLsizei) void "glDrawArrays"))
(define glDrawElements                 (c-lambda (GLenum GLsizei GLenum (pointer void #f)) void "glDrawElements"))
(define glEnable                       (c-lambda (GLenum) void "glEnable"))
(define glEnableVertexAttribArray      (c-lambda (GLuint) void "glEnableVertexAttribArray"))
(define glFinish                       (c-lambda () void "glFinish"))
(define glFlush                        (c-lambda () void "glFlush"))
(define glFramebufferRenderbuffer      (c-lambda (GLenum GLenum GLenum GLuint) void "glFramebufferRenderbuffer"))
(define glFramebufferTexture2D         (c-lambda (GLenum GLenum GLenum GLuint GLint) void "glFramebufferTexture2D"))
(define glFrontFace                    (c-lambda (GLenum) void "glFrontFace"))
(define glGenBuffers                   (c-lambda (GLsizei (pointer GLuint)) void "glGenBuffers"))
(define glGenerateMipmap               (c-lambda (GLenum) void "glGenerateMipmap"))
(define glGenFramebuffers              (c-lambda (GLsizei (pointer GLuint)) void "glGenFramebuffers"))
(define glGenRenderbuffers             (c-lambda (GLsizei (pointer GLuint)) void "glGenRenderbuffers"))
(define glGenTextures                  (c-lambda (GLsizei (pointer GLuint)) void "glGenTextures"))
(define glGetActiveAttrib              (c-lambda (GLuint GLuint GLsizei (pointer GLsizei) (pointer GLint) (pointer GLenum) char-string) void "glGetActiveAttrib"))
(define glGetActiveUniform             (c-lambda (GLuint GLuint GLsizei (pointer GLsizei) (pointer GLint) (pointer GLenum) char-string) void "glGetActiveUniform"))
(define glGetAttachedShaders           (c-lambda (GLuint GLsizei (pointer GLsizei) (pointer GLuint)) void "glGetAttachedShaders"))
(define glGetAttribLocation            (c-lambda (GLuint char-string) int "glGetAttribLocation"))
(define glGetBooleanv                  (c-lambda (GLenum (pointer GLboolean)) void "glGetBooleanv"))
(define glGetBufferParameteriv         (c-lambda (GLenum GLenum (pointer GLint)) void "glGetBufferParameteriv"))
(define glGetError                     (c-lambda () GLenum "glGetError"))
(define glGetFloatv                    (c-lambda (GLenum (pointer GLfloat)) void "glGetFloatv"))
(define glGetFramebufferAttachmentParameteriv (c-lambda (GLenum GLenum GLenum (pointer GLint)) void "glGetFramebufferAttachmentParameteriv"))
(define glGetIntegerv                  (c-lambda (GLenum (pointer GLint)) void "glGetIntegerv"))
(define glGetProgramiv                 (c-lambda (GLuint GLenum (pointer GLint)) void "glGetProgramiv"))
(define glGetProgramInfoLog            (c-lambda (GLuint GLsizei (pointer GLsizei) char-string) void "glGetProgramInfoLog"))
(define glGetRenderbufferParameteriv   (c-lambda (GLenum GLenum (pointer GLint)) void "glGetRenderbufferParameteriv"))
(define glGetShaderiv                  (c-lambda (GLuint GLenum (pointer GLint)) void "glGetShaderiv"))
(define glGetShaderInfoLog             (c-lambda (GLuint GLsizei (pointer GLsizei) char-string) void "glGetShaderInfoLog"))
(define glGetShaderPrecisionFormat     (c-lambda (GLenum GLenum (pointer GLint) (pointer GLint)) void "glGetShaderPrecisionFormat"))
(define glGetShaderSource              (c-lambda (GLuint GLsizei (pointer GLsizei) char-string) void "glGetShaderSource"))
(define glGetString                    (c-lambda (GLenum) GLubyte* "glGetString"))
(define glGetTexParameterfv            (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexParameterfv"))
(define glGetTexParameteriv            (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexParameteriv"))
(define glGetUniformfv                 (c-lambda (GLuint GLint (pointer GLfloat)) void "glGetUniformfv"))
(define glGetUniformiv                 (c-lambda (GLuint GLint (pointer GLint)) void "glGetUniformiv"))
(define glGetUniformLocation           (c-lambda (GLuint char-string) int "glGetUniformLocation"))
(define glGetVertexAttribfv            (c-lambda (GLuint GLenum (pointer GLfloat)) void "glGetVertexAttribfv"))
(define glGetVertexAttribiv            (c-lambda (GLuint GLenum (pointer GLint)) void "glGetVertexAttribiv"))
(define glGetVertexAttribPointerv      (c-lambda (GLuint GLenum (pointer (pointer void))) void "glGetVertexAttribPointerv"))
(define glHint                         (c-lambda (GLenum GLenum) void "glHint"))
(define glIsBuffer                     (c-lambda (GLuint) GLboolean "glIsBuffer"))
(define glIsEnabled                    (c-lambda (GLenum) GLboolean "glIsEnabled"))
(define glIsFramebuffer                (c-lambda (GLuint) GLboolean "glIsFramebuffer"))
(define glIsProgram                    (c-lambda (GLuint) GLboolean "glIsProgram"))
(define glIsRenderbuffer               (c-lambda (GLuint) GLboolean "glIsRenderbuffer"))
(define glIsShader                     (c-lambda (GLuint) GLboolean "glIsShader"))
(define glIsTexture                    (c-lambda (GLuint) GLboolean "glIsTexture"))
(define glLineWidth                    (c-lambda (GLfloat) void "glLineWidth"))
(define glLinkProgram                  (c-lambda (GLuint) void "glLinkProgram"))
(define glPixelStorei                  (c-lambda (GLenum GLint) void "glPixelStorei"))
(define glPolygonOffset                (c-lambda (GLfloat GLfloat) void "glPolygonOffset"))
(define glReadPixels                   (c-lambda (GLint GLint GLsizei GLsizei GLenum GLenum (pointer void #f)) void "glReadPixels"))
(define glReleaseShaderCompiler        (c-lambda () void "glReleaseShaderCompiler"))
(define glRenderbufferStorage          (c-lambda (GLenum GLenum GLsizei GLsizei) void "glRenderbufferStorage"))
(define glSampleCoverage               (c-lambda (GLclampf GLboolean) void "glSampleCoverage"))
(define glScissor                      (c-lambda (GLint GLint GLsizei GLsizei) void "glScissor"))
(define glShaderBinary                 (c-lambda (GLsizei (pointer GLuint) GLenum (pointer void #f) GLsizei) void "glShaderBinary"))
(define glShaderSource                 (c-lambda (GLuint GLsizei (pointer (pointer char)) (pointer GLint)) void "glShaderSource"))
(define glStencilFunc                  (c-lambda (GLenum GLint GLuint) void "glStencilFunc"))
(define glStencilFuncSeparate          (c-lambda (GLenum GLenum GLint GLuint) void "glStencilFuncSeparate"))
(define glStencilMask                  (c-lambda (GLuint) void "glStencilMask"))
(define glStencilMaskSeparate          (c-lambda (GLenum GLuint) void "glStencilMaskSeparate"))
(define glStencilOp                    (c-lambda (GLenum GLenum GLenum) void "glStencilOp"))
(define glStencilOpSeparate            (c-lambda (GLenum GLenum GLenum GLenum) void "glStencilOpSeparate"))
(define glTexImage2D                   (c-lambda (GLenum GLint GLint GLsizei GLsizei GLint GLenum GLenum (pointer void #f)) void "glTexImage2D"))
(define glTexParameterf                (c-lambda (GLenum GLenum GLfloat) void "glTexParameterf"))
(define glTexParameterfv               (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexParameterfv"))
(define glTexParameteri                (c-lambda (GLenum GLenum GLint) void "glTexParameteri"))
(define glTexParameteriv               (c-lambda (GLenum GLenum (pointer GLint)) void "glTexParameteriv"))
(define glTexSubImage2D                (c-lambda (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum (pointer void #f)) void "glTexSubImage2D"))
(define glUniform1f                    (c-lambda (GLint GLfloat) void "glUniform1f"))
(define glUniform1fv                   (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform1fv"))
(define glUniform1i                    (c-lambda (GLint GLint) void "glUniform1i"))
(define glUniform1iv                   (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform1iv"))
(define glUniform2f                    (c-lambda (GLint GLfloat GLfloat) void "glUniform2f"))
(define glUniform2fv                   (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform2fv"))
(define glUniform2i                    (c-lambda (GLint GLint GLint) void "glUniform2i"))
(define glUniform2iv                   (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform2iv"))
(define glUniform3f                    (c-lambda (GLint GLfloat GLfloat GLfloat) void "glUniform3f"))
(define glUniform3fv                   (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform3fv"))
(define glUniform3i                    (c-lambda (GLint GLint GLint GLint) void "glUniform3i"))
(define glUniform3iv                   (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform3iv"))
(define glUniform4f                    (c-lambda (GLint GLfloat GLfloat GLfloat GLfloat) void "glUniform4f"))
(define glUniform4fv                   (c-lambda (GLint GLsizei (pointer GLfloat)) void "glUniform4fv"))
(define glUniform4i                    (c-lambda (GLint GLint GLint GLint GLint) void "glUniform4i"))
(define glUniform4iv                   (c-lambda (GLint GLsizei (pointer GLint)) void "glUniform4iv"))
(define glUniformMatrix2fv             (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix2fv"))
(define glUniformMatrix3fv             (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix3fv"))
(define glUniformMatrix4fv             (c-lambda (GLint GLsizei GLboolean (pointer GLfloat)) void "glUniformMatrix4fv"))
(define glUseProgram                   (c-lambda (GLuint) void "glUseProgram"))
(define glValidateProgram              (c-lambda (GLuint) void "glValidateProgram"))
(define glVertexAttrib1f               (c-lambda (GLuint GLfloat) void "glVertexAttrib1f"))
(define glVertexAttrib1fv              (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib1fv"))
(define glVertexAttrib2f               (c-lambda (GLuint GLfloat GLfloat) void "glVertexAttrib2f"))
(define glVertexAttrib2fv              (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib2fv"))
(define glVertexAttrib3f               (c-lambda (GLuint GLfloat GLfloat GLfloat) void "glVertexAttrib3f"))
(define glVertexAttrib3fv              (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib3fv"))
(define glVertexAttrib4f               (c-lambda (GLuint GLfloat GLfloat GLfloat GLfloat) void "glVertexAttrib4f"))
(define glVertexAttrib4fv              (c-lambda (GLuint (pointer GLfloat)) void "glVertexAttrib4fv"))
(define glVertexAttribPointer          (c-lambda (GLuint GLint GLenum GLboolean GLsizei (pointer void #f)) void "glVertexAttribPointer"))
(define glViewport                     (c-lambda (GLint GLint GLsizei GLsizei) void "glViewport"))

(include "gl2-custom.scm")

