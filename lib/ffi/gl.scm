;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; AUTO-GENERATED by 'gambit_ffi_import.clj'
;;;
;;; Imported from: http://www.khronos.org/registry/gles/api/1.1/gl.h
;;; Import Date: Wed Feb 17 18:34:05 EST 2010
;;;


(declare (block)
         (standard-bindings)
         (extended-bindings))

(c-declare "#include <stdlib.h>")
(c-declare "#include <OpenGLES/ES1/gl.h>")

(define GL_VERSION_ES_CM_1_0                       1)   ; 0x1
(define GL_VERSION_ES_CL_1_0                       1)   ; 0x1
(define GL_VERSION_ES_CM_1_1                       1)   ; 0x1
(define GL_VERSION_ES_CL_1_1                       1)   ; 0x1
(define GL_DEPTH_BUFFER_BIT                      256)   ; 0x100
(define GL_STENCIL_BUFFER_BIT                   1024)   ; 0x400
(define GL_COLOR_BUFFER_BIT                    16384)   ; 0x4000
(define GL_FALSE                                   0)   ; 0x0
(define GL_TRUE                                    1)   ; 0x1
(define GL_POINTS                                  0)   ; 0x0
(define GL_LINES                                   1)   ; 0x1
(define GL_LINE_LOOP                               2)   ; 0x2
(define GL_LINE_STRIP                              3)   ; 0x3
(define GL_TRIANGLES                               4)   ; 0x4
(define GL_TRIANGLE_STRIP                          5)   ; 0x5
(define GL_TRIANGLE_FAN                            6)   ; 0x6
(define GL_NEVER                                 512)   ; 0x200
(define GL_LESS                                  513)   ; 0x201
(define GL_EQUAL                                 514)   ; 0x202
(define GL_LEQUAL                                515)   ; 0x203
(define GL_GREATER                               516)   ; 0x204
(define GL_NOTEQUAL                              517)   ; 0x205
(define GL_GEQUAL                                518)   ; 0x206
(define GL_ALWAYS                                519)   ; 0x207
(define GL_ZERO                                    0)   ; 0x0
(define GL_ONE                                     1)   ; 0x1
(define GL_SRC_COLOR                             768)   ; 0x300
(define GL_ONE_MINUS_SRC_COLOR                   769)   ; 0x301
(define GL_SRC_ALPHA                             770)   ; 0x302
(define GL_ONE_MINUS_SRC_ALPHA                   771)   ; 0x303
(define GL_DST_ALPHA                             772)   ; 0x304
(define GL_ONE_MINUS_DST_ALPHA                   773)   ; 0x305
(define GL_DST_COLOR                             774)   ; 0x306
(define GL_ONE_MINUS_DST_COLOR                   775)   ; 0x307
(define GL_SRC_ALPHA_SATURATE                    776)   ; 0x308
(define GL_CLIP_PLANE0                         12288)   ; 0x3000
(define GL_CLIP_PLANE1                         12289)   ; 0x3001
(define GL_CLIP_PLANE2                         12290)   ; 0x3002
(define GL_CLIP_PLANE3                         12291)   ; 0x3003
(define GL_CLIP_PLANE4                         12292)   ; 0x3004
(define GL_CLIP_PLANE5                         12293)   ; 0x3005
(define GL_FRONT                                1028)   ; 0x404
(define GL_BACK                                 1029)   ; 0x405
(define GL_FRONT_AND_BACK                       1032)   ; 0x408
(define GL_FOG                                  2912)   ; 0xb60
(define GL_LIGHTING                             2896)   ; 0xb50
(define GL_TEXTURE_2D                           3553)   ; 0xde1
(define GL_CULL_FACE                            2884)   ; 0xb44
(define GL_ALPHA_TEST                           3008)   ; 0xbc0
(define GL_BLEND                                3042)   ; 0xbe2
(define GL_COLOR_LOGIC_OP                       3058)   ; 0xbf2
(define GL_DITHER                               3024)   ; 0xbd0
(define GL_STENCIL_TEST                         2960)   ; 0xb90
(define GL_DEPTH_TEST                           2929)   ; 0xb71
(define GL_POINT_SMOOTH                         2832)   ; 0xb10
(define GL_LINE_SMOOTH                          2848)   ; 0xb20
(define GL_SCISSOR_TEST                         3089)   ; 0xc11
(define GL_COLOR_MATERIAL                       2903)   ; 0xb57
(define GL_NORMALIZE                            2977)   ; 0xba1
(define GL_RESCALE_NORMAL                      32826)   ; 0x803a
(define GL_POLYGON_OFFSET_FILL                 32823)   ; 0x8037
(define GL_VERTEX_ARRAY                        32884)   ; 0x8074
(define GL_NORMAL_ARRAY                        32885)   ; 0x8075
(define GL_COLOR_ARRAY                         32886)   ; 0x8076
(define GL_TEXTURE_COORD_ARRAY                 32888)   ; 0x8078
(define GL_MULTISAMPLE                         32925)   ; 0x809d
(define GL_SAMPLE_ALPHA_TO_COVERAGE            32926)   ; 0x809e
(define GL_SAMPLE_ALPHA_TO_ONE                 32927)   ; 0x809f
(define GL_SAMPLE_COVERAGE                     32928)   ; 0x80a0
(define GL_NO_ERROR                                0)   ; 0x0
(define GL_INVALID_ENUM                         1280)   ; 0x500
(define GL_INVALID_VALUE                        1281)   ; 0x501
(define GL_INVALID_OPERATION                    1282)   ; 0x502
(define GL_STACK_OVERFLOW                       1283)   ; 0x503
(define GL_STACK_UNDERFLOW                      1284)   ; 0x504
(define GL_OUT_OF_MEMORY                        1285)   ; 0x505
(define GL_EXP                                  2048)   ; 0x800
(define GL_EXP2                                 2049)   ; 0x801
(define GL_FOG_DENSITY                          2914)   ; 0xb62
(define GL_FOG_START                            2915)   ; 0xb63
(define GL_FOG_END                              2916)   ; 0xb64
(define GL_FOG_MODE                             2917)   ; 0xb65
(define GL_FOG_COLOR                            2918)   ; 0xb66
(define GL_CW                                   2304)   ; 0x900
(define GL_CCW                                  2305)   ; 0x901
(define GL_CURRENT_COLOR                        2816)   ; 0xb00
(define GL_CURRENT_NORMAL                       2818)   ; 0xb02
(define GL_CURRENT_TEXTURE_COORDS               2819)   ; 0xb03
(define GL_POINT_SIZE                           2833)   ; 0xb11
(define GL_POINT_SIZE_MIN                      33062)   ; 0x8126
(define GL_POINT_SIZE_MAX                      33063)   ; 0x8127
(define GL_POINT_FADE_THRESHOLD_SIZE           33064)   ; 0x8128
(define GL_POINT_DISTANCE_ATTENUATION          33065)   ; 0x8129
(define GL_SMOOTH_POINT_SIZE_RANGE              2834)   ; 0xb12
(define GL_LINE_WIDTH                           2849)   ; 0xb21
(define GL_SMOOTH_LINE_WIDTH_RANGE              2850)   ; 0xb22
(define GL_ALIASED_POINT_SIZE_RANGE            33901)   ; 0x846d
(define GL_ALIASED_LINE_WIDTH_RANGE            33902)   ; 0x846e
(define GL_CULL_FACE_MODE                       2885)   ; 0xb45
(define GL_FRONT_FACE                           2886)   ; 0xb46
(define GL_SHADE_MODEL                          2900)   ; 0xb54
(define GL_DEPTH_RANGE                          2928)   ; 0xb70
(define GL_DEPTH_WRITEMASK                      2930)   ; 0xb72
(define GL_DEPTH_CLEAR_VALUE                    2931)   ; 0xb73
(define GL_DEPTH_FUNC                           2932)   ; 0xb74
(define GL_STENCIL_CLEAR_VALUE                  2961)   ; 0xb91
(define GL_STENCIL_FUNC                         2962)   ; 0xb92
(define GL_STENCIL_VALUE_MASK                   2963)   ; 0xb93
(define GL_STENCIL_FAIL                         2964)   ; 0xb94
(define GL_STENCIL_PASS_DEPTH_FAIL              2965)   ; 0xb95
(define GL_STENCIL_PASS_DEPTH_PASS              2966)   ; 0xb96
(define GL_STENCIL_REF                          2967)   ; 0xb97
(define GL_STENCIL_WRITEMASK                    2968)   ; 0xb98
(define GL_MATRIX_MODE                          2976)   ; 0xba0
(define GL_VIEWPORT                             2978)   ; 0xba2
(define GL_MODELVIEW_STACK_DEPTH                2979)   ; 0xba3
(define GL_PROJECTION_STACK_DEPTH               2980)   ; 0xba4
(define GL_TEXTURE_STACK_DEPTH                  2981)   ; 0xba5
(define GL_MODELVIEW_MATRIX                     2982)   ; 0xba6
(define GL_PROJECTION_MATRIX                    2983)   ; 0xba7
(define GL_TEXTURE_MATRIX                       2984)   ; 0xba8
(define GL_ALPHA_TEST_FUNC                      3009)   ; 0xbc1
(define GL_ALPHA_TEST_REF                       3010)   ; 0xbc2
(define GL_BLEND_DST                            3040)   ; 0xbe0
(define GL_BLEND_SRC                            3041)   ; 0xbe1
(define GL_LOGIC_OP_MODE                        3056)   ; 0xbf0
(define GL_SCISSOR_BOX                          3088)   ; 0xc10
(define GL_SCISSOR_TEST                         3089)   ; 0xc11
(define GL_COLOR_CLEAR_VALUE                    3106)   ; 0xc22
(define GL_COLOR_WRITEMASK                      3107)   ; 0xc23
(define GL_UNPACK_ALIGNMENT                     3317)   ; 0xcf5
(define GL_PACK_ALIGNMENT                       3333)   ; 0xd05
(define GL_MAX_LIGHTS                           3377)   ; 0xd31
(define GL_MAX_CLIP_PLANES                      3378)   ; 0xd32
(define GL_MAX_TEXTURE_SIZE                     3379)   ; 0xd33
(define GL_MAX_MODELVIEW_STACK_DEPTH            3382)   ; 0xd36
(define GL_MAX_PROJECTION_STACK_DEPTH           3384)   ; 0xd38
(define GL_MAX_TEXTURE_STACK_DEPTH              3385)   ; 0xd39
(define GL_MAX_VIEWPORT_DIMS                    3386)   ; 0xd3a
(define GL_MAX_TEXTURE_UNITS                   34018)   ; 0x84e2
(define GL_SUBPIXEL_BITS                        3408)   ; 0xd50
(define GL_RED_BITS                             3410)   ; 0xd52
(define GL_GREEN_BITS                           3411)   ; 0xd53
(define GL_BLUE_BITS                            3412)   ; 0xd54
(define GL_ALPHA_BITS                           3413)   ; 0xd55
(define GL_DEPTH_BITS                           3414)   ; 0xd56
(define GL_STENCIL_BITS                         3415)   ; 0xd57
(define GL_POLYGON_OFFSET_UNITS                10752)   ; 0x2a00
(define GL_POLYGON_OFFSET_FILL                 32823)   ; 0x8037
(define GL_POLYGON_OFFSET_FACTOR               32824)   ; 0x8038
(define GL_TEXTURE_BINDING_2D                  32873)   ; 0x8069
(define GL_VERTEX_ARRAY_SIZE                   32890)   ; 0x807a
(define GL_VERTEX_ARRAY_TYPE                   32891)   ; 0x807b
(define GL_VERTEX_ARRAY_STRIDE                 32892)   ; 0x807c
(define GL_NORMAL_ARRAY_TYPE                   32894)   ; 0x807e
(define GL_NORMAL_ARRAY_STRIDE                 32895)   ; 0x807f
(define GL_COLOR_ARRAY_SIZE                    32897)   ; 0x8081
(define GL_COLOR_ARRAY_TYPE                    32898)   ; 0x8082
(define GL_COLOR_ARRAY_STRIDE                  32899)   ; 0x8083
(define GL_TEXTURE_COORD_ARRAY_SIZE            32904)   ; 0x8088
(define GL_TEXTURE_COORD_ARRAY_TYPE            32905)   ; 0x8089
(define GL_TEXTURE_COORD_ARRAY_STRIDE          32906)   ; 0x808a
(define GL_VERTEX_ARRAY_POINTER                32910)   ; 0x808e
(define GL_NORMAL_ARRAY_POINTER                32911)   ; 0x808f
(define GL_COLOR_ARRAY_POINTER                 32912)   ; 0x8090
(define GL_TEXTURE_COORD_ARRAY_POINTER         32914)   ; 0x8092
(define GL_SAMPLE_BUFFERS                      32936)   ; 0x80a8
(define GL_SAMPLES                             32937)   ; 0x80a9
(define GL_SAMPLE_COVERAGE_VALUE               32938)   ; 0x80aa
(define GL_SAMPLE_COVERAGE_INVERT              32939)   ; 0x80ab
(define GL_NUM_COMPRESSED_TEXTURE_FORMATS      34466)   ; 0x86a2
(define GL_COMPRESSED_TEXTURE_FORMATS          34467)   ; 0x86a3
(define GL_DONT_CARE                            4352)   ; 0x1100
(define GL_FASTEST                              4353)   ; 0x1101
(define GL_NICEST                               4354)   ; 0x1102
(define GL_PERSPECTIVE_CORRECTION_HINT          3152)   ; 0xc50
(define GL_POINT_SMOOTH_HINT                    3153)   ; 0xc51
(define GL_LINE_SMOOTH_HINT                     3154)   ; 0xc52
(define GL_FOG_HINT                             3156)   ; 0xc54
(define GL_GENERATE_MIPMAP_HINT                33170)   ; 0x8192
(define GL_LIGHT_MODEL_AMBIENT                  2899)   ; 0xb53
(define GL_LIGHT_MODEL_TWO_SIDE                 2898)   ; 0xb52
(define GL_AMBIENT                              4608)   ; 0x1200
(define GL_DIFFUSE                              4609)   ; 0x1201
(define GL_SPECULAR                             4610)   ; 0x1202
(define GL_POSITION                             4611)   ; 0x1203
(define GL_SPOT_DIRECTION                       4612)   ; 0x1204
(define GL_SPOT_EXPONENT                        4613)   ; 0x1205
(define GL_SPOT_CUTOFF                          4614)   ; 0x1206
(define GL_CONSTANT_ATTENUATION                 4615)   ; 0x1207
(define GL_LINEAR_ATTENUATION                   4616)   ; 0x1208
(define GL_QUADRATIC_ATTENUATION                4617)   ; 0x1209
(define GL_BYTE                                 5120)   ; 0x1400
(define GL_UNSIGNED_BYTE                        5121)   ; 0x1401
(define GL_SHORT                                5122)   ; 0x1402
(define GL_UNSIGNED_SHORT                       5123)   ; 0x1403
(define GL_FLOAT                                5126)   ; 0x1406
(define GL_FIXED                                5132)   ; 0x140c
(define GL_CLEAR                                5376)   ; 0x1500
(define GL_AND                                  5377)   ; 0x1501
(define GL_AND_REVERSE                          5378)   ; 0x1502
(define GL_COPY                                 5379)   ; 0x1503
(define GL_AND_INVERTED                         5380)   ; 0x1504
(define GL_NOOP                                 5381)   ; 0x1505
(define GL_XOR                                  5382)   ; 0x1506
(define GL_OR                                   5383)   ; 0x1507
(define GL_NOR                                  5384)   ; 0x1508
(define GL_EQUIV                                5385)   ; 0x1509
(define GL_INVERT                               5386)   ; 0x150a
(define GL_OR_REVERSE                           5387)   ; 0x150b
(define GL_COPY_INVERTED                        5388)   ; 0x150c
(define GL_OR_INVERTED                          5389)   ; 0x150d
(define GL_NAND                                 5390)   ; 0x150e
(define GL_SET                                  5391)   ; 0x150f
(define GL_EMISSION                             5632)   ; 0x1600
(define GL_SHININESS                            5633)   ; 0x1601
(define GL_AMBIENT_AND_DIFFUSE                  5634)   ; 0x1602
(define GL_MODELVIEW                            5888)   ; 0x1700
(define GL_PROJECTION                           5889)   ; 0x1701
(define GL_TEXTURE                              5890)   ; 0x1702
(define GL_ALPHA                                6406)   ; 0x1906
(define GL_RGB                                  6407)   ; 0x1907
(define GL_RGBA                                 6408)   ; 0x1908
(define GL_LUMINANCE                            6409)   ; 0x1909
(define GL_LUMINANCE_ALPHA                      6410)   ; 0x190a
(define GL_UNPACK_ALIGNMENT                     3317)   ; 0xcf5
(define GL_PACK_ALIGNMENT                       3333)   ; 0xd05
(define GL_UNSIGNED_SHORT_4_4_4_4              32819)   ; 0x8033
(define GL_UNSIGNED_SHORT_5_5_5_1              32820)   ; 0x8034
(define GL_UNSIGNED_SHORT_5_6_5                33635)   ; 0x8363
(define GL_FLAT                                 7424)   ; 0x1d00
(define GL_SMOOTH                               7425)   ; 0x1d01
(define GL_KEEP                                 7680)   ; 0x1e00
(define GL_REPLACE                              7681)   ; 0x1e01
(define GL_INCR                                 7682)   ; 0x1e02
(define GL_DECR                                 7683)   ; 0x1e03
(define GL_VENDOR                               7936)   ; 0x1f00
(define GL_RENDERER                             7937)   ; 0x1f01
(define GL_VERSION                              7938)   ; 0x1f02
(define GL_EXTENSIONS                           7939)   ; 0x1f03
(define GL_MODULATE                             8448)   ; 0x2100
(define GL_DECAL                                8449)   ; 0x2101
(define GL_ADD                                   260)   ; 0x104
(define GL_TEXTURE_ENV_MODE                     8704)   ; 0x2200
(define GL_TEXTURE_ENV_COLOR                    8705)   ; 0x2201
(define GL_TEXTURE_ENV                          8960)   ; 0x2300
(define GL_NEAREST                              9728)   ; 0x2600
(define GL_LINEAR                               9729)   ; 0x2601
(define GL_NEAREST_MIPMAP_NEAREST               9984)   ; 0x2700
(define GL_LINEAR_MIPMAP_NEAREST                9985)   ; 0x2701
(define GL_NEAREST_MIPMAP_LINEAR                9986)   ; 0x2702
(define GL_LINEAR_MIPMAP_LINEAR                 9987)   ; 0x2703
(define GL_TEXTURE_MAG_FILTER                  10240)   ; 0x2800
(define GL_TEXTURE_MIN_FILTER                  10241)   ; 0x2801
(define GL_TEXTURE_WRAP_S                      10242)   ; 0x2802
(define GL_TEXTURE_WRAP_T                      10243)   ; 0x2803
(define GL_GENERATE_MIPMAP                     33169)   ; 0x8191
(define GL_TEXTURE0                            33984)   ; 0x84c0
(define GL_TEXTURE1                            33985)   ; 0x84c1
(define GL_TEXTURE2                            33986)   ; 0x84c2
(define GL_TEXTURE3                            33987)   ; 0x84c3
(define GL_TEXTURE4                            33988)   ; 0x84c4
(define GL_TEXTURE5                            33989)   ; 0x84c5
(define GL_TEXTURE6                            33990)   ; 0x84c6
(define GL_TEXTURE7                            33991)   ; 0x84c7
(define GL_TEXTURE8                            33992)   ; 0x84c8
(define GL_TEXTURE9                            33993)   ; 0x84c9
(define GL_TEXTURE10                           33994)   ; 0x84ca
(define GL_TEXTURE11                           33995)   ; 0x84cb
(define GL_TEXTURE12                           33996)   ; 0x84cc
(define GL_TEXTURE13                           33997)   ; 0x84cd
(define GL_TEXTURE14                           33998)   ; 0x84ce
(define GL_TEXTURE15                           33999)   ; 0x84cf
(define GL_TEXTURE16                           34000)   ; 0x84d0
(define GL_TEXTURE17                           34001)   ; 0x84d1
(define GL_TEXTURE18                           34002)   ; 0x84d2
(define GL_TEXTURE19                           34003)   ; 0x84d3
(define GL_TEXTURE20                           34004)   ; 0x84d4
(define GL_TEXTURE21                           34005)   ; 0x84d5
(define GL_TEXTURE22                           34006)   ; 0x84d6
(define GL_TEXTURE23                           34007)   ; 0x84d7
(define GL_TEXTURE24                           34008)   ; 0x84d8
(define GL_TEXTURE25                           34009)   ; 0x84d9
(define GL_TEXTURE26                           34010)   ; 0x84da
(define GL_TEXTURE27                           34011)   ; 0x84db
(define GL_TEXTURE28                           34012)   ; 0x84dc
(define GL_TEXTURE29                           34013)   ; 0x84dd
(define GL_TEXTURE30                           34014)   ; 0x84de
(define GL_TEXTURE31                           34015)   ; 0x84df
(define GL_ACTIVE_TEXTURE                      34016)   ; 0x84e0
(define GL_CLIENT_ACTIVE_TEXTURE               34017)   ; 0x84e1
(define GL_REPEAT                              10497)   ; 0x2901
(define GL_CLAMP_TO_EDGE                       33071)   ; 0x812f
(define GL_LIGHT0                              16384)   ; 0x4000
(define GL_LIGHT1                              16385)   ; 0x4001
(define GL_LIGHT2                              16386)   ; 0x4002
(define GL_LIGHT3                              16387)   ; 0x4003
(define GL_LIGHT4                              16388)   ; 0x4004
(define GL_LIGHT5                              16389)   ; 0x4005
(define GL_LIGHT6                              16390)   ; 0x4006
(define GL_LIGHT7                              16391)   ; 0x4007
(define GL_ARRAY_BUFFER                        34962)   ; 0x8892
(define GL_ELEMENT_ARRAY_BUFFER                34963)   ; 0x8893
(define GL_ARRAY_BUFFER_BINDING                34964)   ; 0x8894
(define GL_ELEMENT_ARRAY_BUFFER_BINDING        34965)   ; 0x8895
(define GL_VERTEX_ARRAY_BUFFER_BINDING         34966)   ; 0x8896
(define GL_NORMAL_ARRAY_BUFFER_BINDING         34967)   ; 0x8897
(define GL_COLOR_ARRAY_BUFFER_BINDING          34968)   ; 0x8898
(define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING  34970)   ; 0x889a
(define GL_STATIC_DRAW                         35044)   ; 0x88e4
(define GL_DYNAMIC_DRAW                        35048)   ; 0x88e8
(define GL_BUFFER_SIZE                         34660)   ; 0x8764
(define GL_BUFFER_USAGE                        34661)   ; 0x8765
(define GL_SUBTRACT                            34023)   ; 0x84e7
(define GL_COMBINE                             34160)   ; 0x8570
(define GL_COMBINE_RGB                         34161)   ; 0x8571
(define GL_COMBINE_ALPHA                       34162)   ; 0x8572
(define GL_RGB_SCALE                           34163)   ; 0x8573
(define GL_ADD_SIGNED                          34164)   ; 0x8574
(define GL_INTERPOLATE                         34165)   ; 0x8575
(define GL_CONSTANT                            34166)   ; 0x8576
(define GL_PRIMARY_COLOR                       34167)   ; 0x8577
(define GL_PREVIOUS                            34168)   ; 0x8578
(define GL_OPERAND0_RGB                        34192)   ; 0x8590
(define GL_OPERAND1_RGB                        34193)   ; 0x8591
(define GL_OPERAND2_RGB                        34194)   ; 0x8592
(define GL_OPERAND0_ALPHA                      34200)   ; 0x8598
(define GL_OPERAND1_ALPHA                      34201)   ; 0x8599
(define GL_OPERAND2_ALPHA                      34202)   ; 0x859a
(define GL_ALPHA_SCALE                          3356)   ; 0xd1c
(define GL_SRC0_RGB                            34176)   ; 0x8580
(define GL_SRC1_RGB                            34177)   ; 0x8581
(define GL_SRC2_RGB                            34178)   ; 0x8582
(define GL_SRC0_ALPHA                          34184)   ; 0x8588
(define GL_SRC1_ALPHA                          34185)   ; 0x8589
(define GL_SRC2_ALPHA                          34186)   ; 0x858a
(define GL_DOT3_RGB                            34478)   ; 0x86ae
(define GL_DOT3_RGBA                           34479)   ; 0x86af
(define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES  35738)   ; 0x8b9a
(define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES  35739)   ; 0x8b9b
(define GL_PALETTE4_RGB8_OES                   35728)   ; 0x8b90
(define GL_PALETTE4_RGBA8_OES                  35729)   ; 0x8b91
(define GL_PALETTE4_R5_G6_B5_OES               35730)   ; 0x8b92
(define GL_PALETTE4_RGBA4_OES                  35731)   ; 0x8b93
(define GL_PALETTE4_RGB5_A1_OES                35732)   ; 0x8b94
(define GL_PALETTE8_RGB8_OES                   35733)   ; 0x8b95
(define GL_PALETTE8_RGBA8_OES                  35734)   ; 0x8b96
(define GL_PALETTE8_R5_G6_B5_OES               35735)   ; 0x8b97
(define GL_PALETTE8_RGBA4_OES                  35736)   ; 0x8b98
(define GL_PALETTE8_RGB5_A1_OES                35737)   ; 0x8b99
(define GL_POINT_SIZE_ARRAY_OES                35740)   ; 0x8b9c
(define GL_POINT_SIZE_ARRAY_TYPE_OES           35210)   ; 0x898a
(define GL_POINT_SIZE_ARRAY_STRIDE_OES         35211)   ; 0x898b
(define GL_POINT_SIZE_ARRAY_POINTER_OES        35212)   ; 0x898c
(define GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES  35743)   ; 0x8b9f
(define GL_POINT_SPRITE_OES                    34913)   ; 0x8861
(define GL_COORD_REPLACE_OES                   34914)   ; 0x8862
(define glAlphaFunc                    (c-lambda (GLenum GLclampf) void "glAlphaFunc"))
(define glClearColor                   (c-lambda (GLclampf GLclampf GLclampf GLclampf) void "glClearColor"))
(define glClearDepthf                  (c-lambda (GLclampf) void "glClearDepthf"))
(define glClipPlanef                   (c-lambda (GLenum (pointer GLfloat)) void "glClipPlanef"))
(define glColor4f                      (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glColor4f"))
(define glDepthRangef                  (c-lambda (GLclampf GLclampf) void "glDepthRangef"))
(define glFogf                         (c-lambda (GLenum GLfloat) void "glFogf"))
(define glFogfv                        (c-lambda (GLenum (pointer GLfloat)) void "glFogfv"))
(define glFrustumf                     (c-lambda (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat) void "glFrustumf"))
(define glGetClipPlanef                (c-lambda (GLenum (pointer GLfloat)) void "glGetClipPlanef"))
(define glGetFloatv                    (c-lambda (GLenum (pointer GLfloat)) void "glGetFloatv"))
(define glGetLightfv                   (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetLightfv"))
(define glGetMaterialfv                (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetMaterialfv"))
(define glGetTexEnvfv                  (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexEnvfv"))
(define glGetTexParameterfv            (c-lambda (GLenum GLenum (pointer GLfloat)) void "glGetTexParameterfv"))
(define glLightModelf                  (c-lambda (GLenum GLfloat) void "glLightModelf"))
(define glLightModelfv                 (c-lambda (GLenum (pointer GLfloat)) void "glLightModelfv"))
(define glLightf                       (c-lambda (GLenum GLenum GLfloat) void "glLightf"))
(define glLightfv                      (c-lambda (GLenum GLenum (pointer GLfloat)) void "glLightfv"))
(define glLineWidth                    (c-lambda (GLfloat) void "glLineWidth"))
(define glLoadMatrixf                  (c-lambda ((pointer GLfloat)) void "glLoadMatrixf"))
(define glMaterialf                    (c-lambda (GLenum GLenum GLfloat) void "glMaterialf"))
(define glMaterialfv                   (c-lambda (GLenum GLenum (pointer GLfloat)) void "glMaterialfv"))
(define glMultMatrixf                  (c-lambda ((pointer GLfloat)) void "glMultMatrixf"))
(define glMultiTexCoord4f              (c-lambda (GLenum GLfloat GLfloat GLfloat GLfloat) void "glMultiTexCoord4f"))
(define glNormal3f                     (c-lambda (GLfloat GLfloat GLfloat) void "glNormal3f"))
(define glOrthof                       (c-lambda (GLfloat GLfloat GLfloat GLfloat GLfloat GLfloat) void "glOrthof"))
(define glPointParameterf              (c-lambda (GLenum GLfloat) void "glPointParameterf"))
(define glPointParameterfv             (c-lambda (GLenum (pointer GLfloat)) void "glPointParameterfv"))
(define glPointSize                    (c-lambda (GLfloat) void "glPointSize"))
(define glPolygonOffset                (c-lambda (GLfloat GLfloat) void "glPolygonOffset"))
(define glRotatef                      (c-lambda (GLfloat GLfloat GLfloat GLfloat) void "glRotatef"))
(define glScalef                       (c-lambda (GLfloat GLfloat GLfloat) void "glScalef"))
(define glTexEnvf                      (c-lambda (GLenum GLenum GLfloat) void "glTexEnvf"))
(define glTexEnvfv                     (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexEnvfv"))
(define glTexParameterf                (c-lambda (GLenum GLenum GLfloat) void "glTexParameterf"))
(define glTexParameterfv               (c-lambda (GLenum GLenum (pointer GLfloat)) void "glTexParameterfv"))
(define glTranslatef                   (c-lambda (GLfloat GLfloat GLfloat) void "glTranslatef"))
(define glActiveTexture                (c-lambda (GLenum) void "glActiveTexture"))
(define glAlphaFuncx                   (c-lambda (GLenum GLclampx) void "glAlphaFuncx"))
(define glBindBuffer                   (c-lambda (GLenum GLuint) void "glBindBuffer"))
(define glBindTexture                  (c-lambda (GLenum GLuint) void "glBindTexture"))
(define glBlendFunc                    (c-lambda (GLenum GLenum) void "glBlendFunc"))
(define glBufferData                   (c-lambda (GLenum GLsizeiptr (pointer void #f) GLenum) void "glBufferData"))
(define glBufferSubData                (c-lambda (GLenum GLintptr GLsizeiptr (pointer void #f)) void "glBufferSubData"))
(define glClear                        (c-lambda (GLbitfield) void "glClear"))
(define glClearColorx                  (c-lambda (GLclampx GLclampx GLclampx GLclampx) void "glClearColorx"))
(define glClearDepthx                  (c-lambda (GLclampx) void "glClearDepthx"))
(define glClearStencil                 (c-lambda (GLint) void "glClearStencil"))
(define glClientActiveTexture          (c-lambda (GLenum) void "glClientActiveTexture"))
(define glClipPlanex                   (c-lambda (GLenum (pointer GLfixed)) void "glClipPlanex"))
(define glColor4ub                     (c-lambda (GLubyte GLubyte GLubyte GLubyte) void "glColor4ub"))
(define glColor4x                      (c-lambda (GLfixed GLfixed GLfixed GLfixed) void "glColor4x"))
(define glColorMask                    (c-lambda (GLboolean GLboolean GLboolean GLboolean) void "glColorMask"))
(define glColorPointer                 (c-lambda (GLint GLenum GLsizei (pointer void #f)) void "glColorPointer"))
(define glCompressedTexImage2D         (c-lambda (GLenum GLint GLenum GLsizei GLsizei GLint GLsizei (pointer void #f)) void "glCompressedTexImage2D"))
(define glCompressedTexSubImage2D      (c-lambda (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLsizei (pointer void #f)) void "glCompressedTexSubImage2D"))
(define glCopyTexImage2D               (c-lambda (GLenum GLint GLenum GLint GLint GLsizei GLsizei GLint) void "glCopyTexImage2D"))
(define glCopyTexSubImage2D            (c-lambda (GLenum GLint GLint GLint GLint GLint GLsizei GLsizei) void "glCopyTexSubImage2D"))
(define glCullFace                     (c-lambda (GLenum) void "glCullFace"))
(define glDeleteBuffers                (c-lambda (GLsizei (pointer GLuint)) void "glDeleteBuffers"))
(define glDeleteTextures               (c-lambda (GLsizei (pointer GLuint)) void "glDeleteTextures"))
(define glDepthFunc                    (c-lambda (GLenum) void "glDepthFunc"))
(define glDepthMask                    (c-lambda (GLboolean) void "glDepthMask"))
(define glDepthRangex                  (c-lambda (GLclampx GLclampx) void "glDepthRangex"))
(define glDisable                      (c-lambda (GLenum) void "glDisable"))
(define glDisableClientState           (c-lambda (GLenum) void "glDisableClientState"))
(define glDrawArrays                   (c-lambda (GLenum GLint GLsizei) void "glDrawArrays"))
(define glDrawElements                 (c-lambda (GLenum GLsizei GLenum (pointer void #f)) void "glDrawElements"))
(define glEnable                       (c-lambda (GLenum) void "glEnable"))
(define glEnableClientState            (c-lambda (GLenum) void "glEnableClientState"))
(define glFinish                       (c-lambda () void "glFinish"))
(define glFlush                        (c-lambda () void "glFlush"))
(define glFogx                         (c-lambda (GLenum GLfixed) void "glFogx"))
(define glFogxv                        (c-lambda (GLenum (pointer GLfixed)) void "glFogxv"))
(define glFrontFace                    (c-lambda (GLenum) void "glFrontFace"))
(define glFrustumx                     (c-lambda (GLfixed GLfixed GLfixed GLfixed GLfixed GLfixed) void "glFrustumx"))
(define glGetBooleanv                  (c-lambda (GLenum (pointer GLboolean)) void "glGetBooleanv"))
(define glGetBufferParameteriv         (c-lambda (GLenum GLenum (pointer GLint)) void "glGetBufferParameteriv"))
(define glGetClipPlanex                (c-lambda (GLenum GLfixed) void "glGetClipPlanex"))
(define glGenBuffers                   (c-lambda (GLsizei (pointer GLuint)) void "glGenBuffers"))
(define glGenTextures                  (c-lambda (GLsizei (pointer GLuint)) void "glGenTextures"))
(define glGetError                     (c-lambda () GLenum "glGetError"))
(define glGetFixedv                    (c-lambda (GLenum (pointer GLfixed)) void "glGetFixedv"))
(define glGetIntegerv                  (c-lambda (GLenum (pointer GLint)) void "glGetIntegerv"))
(define glGetLightxv                   (c-lambda (GLenum GLenum (pointer GLfixed)) void "glGetLightxv"))
(define glGetMaterialxv                (c-lambda (GLenum GLenum (pointer GLfixed)) void "glGetMaterialxv"))
(define glGetPointerv                  (c-lambda (GLenum (pointer (pointer void))) void "glGetPointerv"))
(define glGetString                    (c-lambda (GLenum) GLubyte* "glGetString"))
(define glGetTexEnviv                  (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexEnviv"))
(define glGetTexEnvxv                  (c-lambda (GLenum GLenum (pointer GLfixed)) void "glGetTexEnvxv"))
(define glGetTexParameteriv            (c-lambda (GLenum GLenum (pointer GLint)) void "glGetTexParameteriv"))
(define glGetTexParameterxv            (c-lambda (GLenum GLenum (pointer GLfixed)) void "glGetTexParameterxv"))
(define glHint                         (c-lambda (GLenum GLenum) void "glHint"))
(define glIsBuffer                     (c-lambda (GLuint) GLboolean "glIsBuffer"))
(define glIsEnabled                    (c-lambda (GLenum) GLboolean "glIsEnabled"))
(define glIsTexture                    (c-lambda (GLuint) GLboolean "glIsTexture"))
(define glLightModelx                  (c-lambda (GLenum GLfixed) void "glLightModelx"))
(define glLightModelxv                 (c-lambda (GLenum (pointer GLfixed)) void "glLightModelxv"))
(define glLightx                       (c-lambda (GLenum GLenum GLfixed) void "glLightx"))
(define glLightxv                      (c-lambda (GLenum GLenum (pointer GLfixed)) void "glLightxv"))
(define glLineWidthx                   (c-lambda (GLfixed) void "glLineWidthx"))
(define glLoadIdentity                 (c-lambda () void "glLoadIdentity"))
(define glLoadMatrixx                  (c-lambda ((pointer GLfixed)) void "glLoadMatrixx"))
(define glLogicOp                      (c-lambda (GLenum) void "glLogicOp"))
(define glMaterialx                    (c-lambda (GLenum GLenum GLfixed) void "glMaterialx"))
(define glMaterialxv                   (c-lambda (GLenum GLenum (pointer GLfixed)) void "glMaterialxv"))
(define glMatrixMode                   (c-lambda (GLenum) void "glMatrixMode"))
(define glMultMatrixx                  (c-lambda ((pointer GLfixed)) void "glMultMatrixx"))
(define glMultiTexCoord4x              (c-lambda (GLenum GLfixed GLfixed GLfixed GLfixed) void "glMultiTexCoord4x"))
(define glNormal3x                     (c-lambda (GLfixed GLfixed GLfixed) void "glNormal3x"))
(define glNormalPointer                (c-lambda (GLenum GLsizei (pointer void #f)) void "glNormalPointer"))
(define glOrthox                       (c-lambda (GLfixed GLfixed GLfixed GLfixed GLfixed GLfixed) void "glOrthox"))
(define glPixelStorei                  (c-lambda (GLenum GLint) void "glPixelStorei"))
(define glPointParameterx              (c-lambda (GLenum GLfixed) void "glPointParameterx"))
(define glPointParameterxv             (c-lambda (GLenum (pointer GLfixed)) void "glPointParameterxv"))
(define glPointSizex                   (c-lambda (GLfixed) void "glPointSizex"))
(define glPolygonOffsetx               (c-lambda (GLfixed GLfixed) void "glPolygonOffsetx"))
(define glPopMatrix                    (c-lambda () void "glPopMatrix"))
(define glPushMatrix                   (c-lambda () void "glPushMatrix"))
(define glReadPixels                   (c-lambda (GLint GLint GLsizei GLsizei GLenum GLenum (pointer void #f)) void "glReadPixels"))
(define glTexEnvi                      (c-lambda (GLenum GLenum GLint) void "glTexEnvi"))
(define glTexEnvx                      (c-lambda (GLenum GLenum GLfixed) void "glTexEnvx"))
(define glTexEnviv                     (c-lambda (GLenum GLenum (pointer GLint)) void "glTexEnviv"))
(define glTexEnvxv                     (c-lambda (GLenum GLenum (pointer GLfixed)) void "glTexEnvxv"))
(define glTexImage2D                   (c-lambda (GLenum GLint GLint GLsizei GLsizei GLint GLenum GLenum (pointer void #f)) void "glTexImage2D"))
(define glTexParameteri                (c-lambda (GLenum GLenum GLint) void "glTexParameteri"))
(define glTexParameterx                (c-lambda (GLenum GLenum GLfixed) void "glTexParameterx"))
(define glTexParameteriv               (c-lambda (GLenum GLenum (pointer GLint)) void "glTexParameteriv"))
(define glTexParameterxv               (c-lambda (GLenum GLenum (pointer GLfixed)) void "glTexParameterxv"))
(define glTexSubImage2D                (c-lambda (GLenum GLint GLint GLint GLsizei GLsizei GLenum GLenum (pointer void #f)) void "glTexSubImage2D"))
(define glTranslatex                   (c-lambda (GLfixed GLfixed GLfixed) void "glTranslatex"))
(define glVertexPointer                (c-lambda (GLint GLenum GLsizei (pointer void #f)) void "glVertexPointer"))
(define glViewport                     (c-lambda (GLint GLint GLsizei GLsizei) void "glViewport"))
(define GL_OES_read_format                         1)   ; 0x1
(define GL_OES_compressed_paletted_texture         1)   ; 0x1
(define GL_OES_point_size_array                    1)   ; 0x1
(define glPointSizePointerOES          (c-lambda (GLenum GLsizei (pointer void #f)) void "glPointSizePointerOES"))
(define GL_OES_point_sprite                        1)   ; 0x1

(include "gl1-custom.scm")

